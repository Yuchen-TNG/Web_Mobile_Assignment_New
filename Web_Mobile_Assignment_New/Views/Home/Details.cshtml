@model Web_Mobile_Assignment_New.Models.House
@{
    ViewData["Title"] = "House Details";
}

@if (TempData["Message"] != null)
{
    var type = TempData["MessageType"]?.ToString() ?? "success";
    <div class="alert @(type == "success" ? "alert-success" : "alert-error")">
        @TempData["Message"]
    </div>
}

<div class="row mt-4">
    <!-- 左边图片 (Carousel) -->
    <div class="col-md-7">
        <div class="card shadow-sm">
            @if (Model.Images != null && Model.Images.Any())
            {
                <div id="houseCarousel" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @for (int i = 0; i < Model.Images.Count; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img src="@Model.Images.ElementAt(i).ImageUrl"
                                     class="d-block w-100 img-fluid rounded"
                                     alt="House Image @(i + 1)">
                            </div>
                        }
                    </div>

                    <button class="carousel-control-prev" type="button" data-bs-target="#houseCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#houseCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            }
            else
            {
                <img src="@Model.ImageUrl" class="card-img-top img-fluid rounded" alt="House Image">
            }
        </div>
    </div>

    <!-- 右边详情 -->
    <div class="col-md-5">
        <h3 class="fw-bold">@Model.RoomName - @Model.RoomType</h3>
        <p class="text-muted">
            <i class="fa-solid fa-ruler-combined"></i> @Model.Sqft sqft |
            <i class="fa-solid fa-bed"></i> @Model.Rooms Rooms |
            <i class="fa-solid fa-bath"></i> @Model.Bathrooms Bathrooms
        </p>

        <h4 class="text-success fw-bold">RM @Model.Price</h4>

        <hr />

        <h5 class="fw-semibold">Furnishing</h5>
        <p>@(string.IsNullOrEmpty(Model.Furnishing) ? "Not specified" : Model.Furnishing)</p>

        <h5 class="fw-semibold">Other Information</h5>
        <p>@(string.IsNullOrEmpty(Model.Other) ? "No additional info" : Model.Other)</p>

        <hr />

        <h5 class="fw-semibold">Rental Period</h5>
        @if (Model.StartDate.HasValue && Model.EndDate.HasValue)
        {
            <p>@Model.StartDate.Value.ToString("dd MMM yyyy") - @Model.EndDate.Value.ToString("dd MMM yyyy")</p>
        }
        else
        {
            <p>Flexible</p>
        }

        @if (User.Identity.IsAuthenticated && !User.IsInRole("Owner"))
        {
            @if (Model.Owner != null)
            {
                <div class="card mt-3 shadow-sm">
                    <div class="card-header bg-info text-white">
                        Owner Information
                    </div>
                    <div class="card-body">
                        <p><strong>Name:</strong> @Model.Owner.Name</p>
                        <p><strong>Email:</strong> @Model.Owner.Email</p>

                        <a href="https://mail.google.com/mail/?view=cm&fs=1&to=@Model.Owner.Email"
                           target="_blank"
                           class="btn btn-outline-success btn-sm mt-2">
                            <i class="fa-solid fa-envelope"></i> Contact via Gmail
                        </a>
                    </div>
                </div>
            }

            <!-- Rent button -->
            <a href="@Url.Action("Rent", "Home", new { id = Model.Id })" class="btn btn-primary btn-lg w-100 mt-3">
                <i class="fa-solid fa-key"></i> Rent This House
            </a>

            <!-- Report button triggers modal -->
            <button type="button" class="btn btn-danger btn-lg w-100 mt-2" data-bs-toggle="modal" data-bs-target="#reportModal">
                <i class="fa-solid fa-flag"></i> Report This House
            </button>
        }
        else if (!User.Identity.IsAuthenticated)
        {
            <a href="@Url.Action("Login", "Account", new { ReturnUrl = Url.Action("Details", "Home", new { id = Model.Id }) })" class="btn btn-primary btn-lg w-100 mt-3">
                <i class="fa-solid fa-key"></i> Rent This House
            </a>
            <a href="@Url.Action("Login", "Account", new { ReturnUrl = Url.Action("Details", "Home", new { id = Model.Id }) })" class="btn btn-danger btn-lg w-100 mt-2">
                <i class="fa-solid fa-flag"></i> Report This House
            </a>
        }
    </div>
</div>

<div class="mt-4 p-3 bg-light rounded shadow-sm">
    <h5 class="fw-semibold"><i class="fa-solid fa-map-marker-alt"></i> Address</h5>
    <p>@Model.Address</p>
    @if (!string.IsNullOrEmpty(Model.Address))
    {
        <a href="https://www.google.com/maps/search/?api=1&query=@Uri.EscapeDataString(Model.Address)"
           target="_blank" class="btn btn-outline-primary btn-sm mt-2">
            <i class="fa-brands fa-google"></i> View on Google Maps
        </a>
    }
</div>

<!-- ⭐ 评论区 -->
<div class="mt-5">
    <h4 class="fw-bold">Reviews & Ratings</h4>

    @if (User.Identity.IsAuthenticated && !User.IsInRole("Owner"))
    {
        <form asp-action="AddReview" asp-controller="Home" method="post" class="mb-4">
            @Html.AntiForgeryToken()
            <input type="hidden" name="houseId" value="@Model.Id" />
            <div class="mb-3">
                <label class="form-label">Your Rating</label><br />
                <div class="star-rating d-flex justify-content-start">
                    @for (int i = 0; i < 5; i++)
                    {
                        <input type="radio" id="star@(i + 1)" name="rating" value="@(i + 1)" style="display:none;" />
                        <label for="star@(i + 1)" class="star-label" style="cursor:pointer;font-size:2rem;color:#ffc107;margin-right:5px;">
                            <i class="fa-regular fa-star"></i>
                        </label>
                    }
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Your Comment</label>
                <textarea name="comment" class="form-control" rows="3" placeholder="Write your comment..."></textarea>
            </div>

            <button type="submit" class="btn btn-success">Submit Review</button>
        </form>
    }
    else if (User.IsInRole("Owner"))
    {
        <p class="text-muted">Owners cannot leave reviews.</p>
    }
    else
    {
        <p class="text-muted">Please <a href="/Account/Login">login</a> to leave a review.</p>
    }

    <hr />

    @if (Model.Reviews != null && Model.Reviews.Any())
    {
        foreach (var r in Model.Reviews.OrderByDescending(x => x.CreatedAt))
        {
            <div class="card mb-3">
                <div class="card-body">
                    <h6 class="card-title d-flex justify-content-between align-items-center">
                        <span>
                            @r.UserEmail
                            <span class="text-warning">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= r.Rating)
                                    {
                                        <i class="fa-solid fa-star"></i>
                                    }
                                    else
                                    {
                                        <i class="fa-regular fa-star text-muted"></i>
                                    }
                                }
                            </span>
                        </span>

                        <!-- 🔥 删除按钮：只有当前登录用户能删除 -->
                        <!-- 删除按钮：评论人自己 OR 房东都能删除 -->
                        @if (User.Identity.IsAuthenticated &&
                                        (r.UserEmail == User.Identity.Name || User.IsInRole("Owner")))
                        {
                            <form asp-action="DeleteReview" asp-controller="Home" method="post" style="display:inline;"
                                  onsubmit="return confirm('Are you sure you want to delete this review?');">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@r.Id" />
                                <input type="hidden" name="houseId" value="@Model.Id" />
                                <button type="submit" class="btn btn-sm btn-danger">
                                    <i class="fa-solid fa-trash"></i> Delete
                                </button>
                            </form>
                        }

                    </h6>
                    <p class="card-text">@r.Comment</p>
                    <small class="text-muted">@r.CreatedAt.ToLocalTime().ToString("dd MMM yyyy HH:mm")</small>
                </div>
            </div>
        }
    }
    else
    {
        <p>No reviews yet.</p>
    }
</div>


<!-- 举报 Modal -->
<div class="modal fade" id="reportModal" tabindex="-1" aria-labelledby="reportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reportModalLabel">Report This House</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <form asp-action="ReportHouse" asp-controller="Home" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="propretyId" value="@Model.Id" />

                <div class="modal-body">
                    <div class="list-group">
                        <label class="list-group-item">
                            <input type="radio" name="ReportType" value="Misleading" required /> Misleading
                        </label>
                        <label class="list-group-item">
                            <input type="radio" name="ReportType" value="Problem with listing" /> Problem with listing
                        </label>
                        <label class="list-group-item">
                            <input type="radio" name="ReportType" value="Problem with agent" /> Problem with agent
                        </label>
                        <label class="list-group-item">
                            <input type="radio" name="ReportType" value="Other" /> Other
                        </label>
                    </div>

                    <div class="mt-3">
                        <textarea class="form-control" name="Details" rows="3" placeholder="Optional: add more details"></textarea>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Submit Report</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ⭐ 星星评分 CSS -->
<style>
    .star-label i {
        color: #ccc;
        transition: color 0.2s;
    }

    .star-label.selected i {
        color: #ffc107;
    }

    .star-label.hovered i {
        color: #ffc107;
    }
</style>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const stars = document.querySelectorAll(".star-label");
    const radios = document.querySelectorAll(".star-rating input");

stars.forEach((star, idx) => {
    star.addEventListener("click", () => {
        stars.forEach(s => {
            s.classList.remove("selected");
            s.querySelector("i").classList.remove("fa-solid");
            s.querySelector("i").classList.add("fa-regular");
        });

        for (let i = 0; i <= idx; i++) {
            stars[i].classList.add("selected");
            stars[i].querySelector("i").classList.remove("fa-regular");
            stars[i].querySelector("i").classList.add("fa-solid");
        }

        radios.forEach(r => r.checked = false);
        radios[idx].checked = true;
    });

    star.addEventListener("mouseover", () => {
        stars.forEach(s => s.classList.remove("hovered"));
        for (let i = 0; i <= idx; i++) {
            stars[i].classList.add("hovered");
        }
    });

    star.addEventListener("mouseout", () => {
        stars.forEach(s => s.classList.remove("hovered"));
    });
});

});
</script>

