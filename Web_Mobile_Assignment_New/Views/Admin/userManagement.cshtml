@model List<Web_Mobile_Assignment_New.Models.User>

@{
    ViewData["Title"] = "User Management";
}

@if (TempData["Message"] != null)
{
    var type = TempData["MessageType"]?.ToString() ?? "success";
    <div class="alert @(type == "success" ? "alert-success" : "alert-error")">
        @TempData["Message"]
    </div>
}

<style>
    :root {
        --primary: #4a90e2;
        --primary-hover: #357ab8;
        --success: #4caf50;
        --danger: #f44336;
        --text-dark: #333;
        --card-bg: #fff;
        --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    }

    /* Header 容器 */
    .header-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 25px;
        position: relative;
    }

        .header-container h1 {
            margin: 0;
            flex-grow: 1;
            text-align: center;
            font-size: 28px;
            color: var(--text-dark);
        }

    /* 按钮基础样式 */
    .btn {
        display: inline-block;
        padding: 8px 16px;
        background: var(--primary);
        color: #fff;
        text-decoration: none;
        border-radius: 6px;
        font-size: 14px;
        font-weight: bold;
        transition: background 0.3s, transform 0.2s, box-shadow 0.2s;
    }

        .btn:hover {
            background: var(--primary-hover);
            transform: translateY(-2px) scale(1.05);
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
        }

    /* Back 按钮定位 */
    .back-btn {
        position: absolute;
        left: 0;
        padding: 8px 16px;
        background-color: #4a90e2;
        color: #fff;
        text-decoration: none;
        border-radius: 6px;
        font-weight: bold;
        transition: background-color 0.3s, transform 0.2s;
    }

        .back-btn:hover {
            background-color: #357ab8;
            transform: scale(1.05);
        }

    /* 卡片容器 */
    .card-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        width: 95%;
        margin: 0 auto;
    }

    /* 卡片 */
    .user-card {
        background: var(--card-bg);
        border-radius: 12px;
        box-shadow: var(--shadow);
        padding: 16px;
        transition: transform 0.2s, box-shadow 0.2s;
        font-family: Arial, sans-serif;
        display: flex; /* ✅ 横向布局 */
        align-items: center; /* 垂直居中 */
        gap: 20px; /* 头像和文字的间距 */
        text-align: left; /* 左对齐文字 */
    }

        .user-card:hover {
            transform: translateY(-4px) scale(1.02);
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.12);
        }

    .user-photo {
        flex-shrink: 0; /* ✅ 不要被压缩 */
        width: 110px;
        height: 110px;
        border-radius: 50%;
        border: 3px solid #fff;
        overflow: hidden; /* ✅ 裁掉外面部分 */
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

        .user-photo img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    /* 右边的文字部分 */
    .user-details {
        display: flex;
        flex-direction: column;
        justify-content: center;
        flex: 1;
    }


    /* hover 时头像放大并加深阴影 */
    .user-card:hover .user-img {
        transform: scale(1.08);
        box-shadow: 0 8px 20px rgba(0,0,0,0.25);
    }

    /* 默认头像图标（如果没有照片） */
    .user-img.default {
        background: linear-gradient(135deg, #4a90e2, #357ab8);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 40px;
        color: #fff;
        font-weight: bold;
    }


    .user-title {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 8px;
        color: var(--text-dark);
    }

    .user-info {
        font-size: 14px;
        margin-bottom: 6px;
        color: var(--text-light);
    }

    /* 状态样式 */
    .status-valid {
        color: var(--success);
        font-weight: bold;
    }

    .status-restricted {
        color: var(--danger);
        font-weight: bold;
    }

    .status-other {
        color: var(--text-dark);
        font-weight: bold;
    }

    /* Details 按钮 */
    .details-btn {
        margin-top: 10px;
        display: inline-block;
    }
</style>

<div class="header-container">
    <h1>User Management</h1>
    <a asp-controller="Home" asp-action="Admin" class="back-btn">⬅ Back</a>
</div>

<div class="card-container">
    @foreach (var user in Model)
    {
        if (user.Role == "Admin") continue;

        string statusClass = (user as OwnerTenant)?.Status?.ToLower() switch
        {
            "valid" => "status-valid",
            "restricted" => "status-restricted",
            "res" => "status-restricted",
            _ => "status-other"
        };

        <div class="user-card">
            <div class="user-photo">
                <img src="/photos/@((user as OwnerTenant)?.PhotoURL ?? "/images/default.png")"
                     alt="User Photo" class="user-img" />
            </div>
            <div class="user-details">
                <!-- ✅ 新增容器 -->
                <div class="user-title">@user.Name (@user.Role)</div>
                <div class="user-info">Email: @user.Email</div>
                <div class="user-info">
                    Birthday: @(user.Birthday.ToDateTime(TimeOnly.MinValue).ToString("yyyy-MM-dd"))
                </div>
                <div class="user-info @statusClass">
                    Status: @((user as OwnerTenant)?.Status ?? "N/A")
                </div>
                <a asp-controller="Admin"
                   asp-action="UserDetails"
                   asp-route-email="@user.Email"
                   class="details-btn">
                    Details
                </a>
            </div>
        </div>

    }
</div>
